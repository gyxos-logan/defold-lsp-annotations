- desc: 'Functions for controlling collection factory components which are

    used to dynamically spawn collections into the runtime.'
  members:
  - desc: 'This returns status of the collection factory.


      Calling this function when the factory is not marked as dynamic loading always
      returns COMP_COLLECTION_FACTORY_STATUS_LOADED.'
    name: get_status
    parameters:
    - desc: the collection factory component to get status from
      name: url
      optional: true
      type:
      - string
      - hash
      - url
    returns:
    - desc: 'status of the collection factory component


        - `collectionfactory.STATUS_UNLOADED`

        - `collectionfactory.STATUS_LOADING`

        - `collectionfactory.STATUS_LOADED`'
      type: constant
    type: function
  - desc: unloaded
    name: STATUS_UNLOADED
    type: number
  - desc: loading
    name: STATUS_LOADING
    type: number
  - desc: loaded
    name: STATUS_LOADED
    type: number
  - desc: 'This decreases the reference count for each resource loaded with collectionfactory.load.
      If reference is zero, the resource is destroyed.


      Calling this function when the factory is not marked as dynamic loading does
      nothing.'
    name: unload
    parameters:
    - desc: the collection factory component to unload
      name: url
      optional: true
      type:
      - string
      - hash
      - url
    type: function
  - desc: 'Resources loaded are referenced by the collection factory component until
      the existing (parent) collection is destroyed or collectionfactory.unload is
      called.


      Calling this function when the factory is not marked as dynamic loading does
      nothing.'
    name: load
    parameters:
    - desc: the collection factory component to load
      name: url
      optional: true
      type:
      - string
      - hash
      - url
    - desc: 'function to call when resources are loaded.


        `self`

        : [type:object] The current object.


        `url`

        : [type:url] url of the collection factory component


        `result`

        : [type:boolean] True if resource were loaded successfully'
      name: complete_function
      optional: true
      type: function(self, url, result))
    type: function
  - desc: 'The URL identifies the collectionfactory component that should do the spawning.


      Spawning is instant, but spawned game objects get their first update calls the
      following frame. The supplied parameters for position, rotation and scale

      will be applied to the whole collection when spawned.


      Script properties in the created game objects can be overridden through

      a properties-parameter table. The table should contain game object ids

      (hash) as keys and property tables as values to be used when initiating each

      spawned game object.


      See go.property for more information on script properties.


      The function returns a table that contains a key for each game object

      id (hash), as addressed if the collection file was top level, and the

      corresponding spawned instance id (hash) as value with a unique path

      prefix added to each instance.


      [icon:attention] Calling [ref:collectionfactory.create] create on a collection
      factory that is marked as dynamic without having loaded resources

      using [ref:collectionfactory.load] will synchronously load and create resources
      which may affect application performance.'
    name: create
    parameters:
    - desc: the collection factory component to be used
      name: url
      type:
      - string
      - hash
      - url
    - desc: position to assign to the newly spawned collection
      name: position
      optional: true
      type: vector3
    - desc: rotation to assign to the newly spawned collection
      name: rotation
      optional: true
      type: quaternion
    - desc: table of script properties to propagate to any new game object instances
      name: properties
      optional: true
      type: table
    - desc: uniform scaling to apply to the newly spawned collection (must be greater
        than 0).
      name: scale
      optional: true
      type: number
    returns:
    - desc: a table mapping the id:s from the collection to the new instance id:s
      type: table
    type: function
  name: collectionfactory
  type: table
