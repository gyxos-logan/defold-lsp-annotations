elements {
  type: FUNCTION
  name: "dmURI::Result"
  brief: "URI parsing result"
  description: "URI parsing result"
}
elements {
  type: STRUCT
  name: "dmURI::Parts"
  brief: "URI parsing result parts"
  description: "URI parsing result parts"
}
elements {
  type: FUNCTION
  name: "dmURI::Parse"
  brief: "Parse URI and split in three parts. (scheme, locat..."
  description: "Parse URI and split in three parts. (scheme, location, path)"
  returnvalues {
    name: "RESULT_OK"
    doc: "on success"
    types: ""
  }
  parameters {
    name: "uri"
    doc: "URI to parse"
    types: "const char*"
  }
  parameters {
    name: "parts"
    doc: "Result"
    types: "dmURI::Parts"
  }
}
elements {
  type: FUNCTION
  name: "dmURI::Encode"
  brief: "Performs URL encoding of the supplied buffer"
  description: "Performs URL encoding of the supplied buffer"
  parameters {
    name: "src"
    doc: "string to encode"
    types: "const char*"
  }
  parameters {
    name: "dst"
    doc: "the destination buffer"
    types: "char*"
  }
  parameters {
    name: "dst_size"
    doc: "size of the provided out buffer"
    types: "uint32_t"
  }
  parameters {
    name: "bytes_written[out]"
    doc: "number of bytes written"
    types: "uint32_t"
  }
}
elements {
  type: FUNCTION
  name: "dmURI::Decode"
  brief: "Decodes an URL encoded buffer"
  description: "Decodes an URL encoded buffer"
  parameters {
    name: "src"
    doc: "Input"
    types: "const char*"
  }
  parameters {
    name: "dst"
    doc: "Decoded output"
    types: "char*"
  }
}
info {
  namespace: "dmURI"
  name: "URI"
  brief: "SDK URI API documentation"
  description: "URI functions."
  path: "engine/dlib/src/dmsdk/dlib/uri.h"
  file: "dmsdk/dlib/uri.h"
}
