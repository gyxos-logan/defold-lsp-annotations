- desc: Header parse result enumeration.
  name: ParseResult
  type: enum
- desc: Parse the header data and make callbacks for each header/version entry and
    the start of the body.
  name: ParseHeader
  parameters:
  - desc: http response headers. Must be a null terminated string.
    name: header_str
    type: char*
  - desc: user data to the callbacks.
    name: user_data
    type: const void*
  - desc: true if there is no more data
    name: end_of_receive
    type: bool
  - desc: "callback for the http version\n    void (*version_cbk)(void* user_data,\
      \ int major, int minor, int status, const char* status_str);"
    name: version_cbk
    type: function
  - desc: "callback for each header/value pair\n    void (*header_cbk)(void* user_data,\
      \ const char* key, const char* value);"
    name: header_cbk
    type: function
  - desc: "callback to note the start offset of the body data.\n    void (*body_cbk)(void*\
      \ user_data, int offset)"
    name: body_cbk
    type: function
  returns:
  - desc: the parse result
    type: dmHttpClient::ParseResult
  type: function
- desc: Http client functions.
  members: []
  name: dmHttpClient
  type: table
