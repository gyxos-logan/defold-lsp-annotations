- desc: 'Post this message to a collection-proxy-component to modify the time-step
    used when updating the collection controlled by the proxy.

    The time-step is modified by a scaling `factor` and can be incremented either
    continuously or in discrete steps.


    The continuous mode can be used for slow-motion or fast-forward effects.


    The discrete mode is only useful when scaling the time-step to pass slower than
    real time (`factor` is below 1).

    The time-step will then be set to 0 for as many frames as the scaling demands
    and then take on the full real-time-step for one frame,

    to simulate pulses. E.g. if `factor` is set to `0.1` the time-step would be 0
    for 9 frames, then be 1/60 for one

    frame, 0 for 9 frames, and so on. The result in practice is that the game looks
    like it''s updated at a much lower frequency than 60 Hz,

    which can be useful for debugging when each frame needs to be inspected.'
  name: set_time_step
  type: message
- desc: 'Post this message to a collection-proxy-component to start the loading of
    the referenced collection.

    When the loading has completed, the message [ref:proxy_loaded] will be sent back
    to the script.


    A loaded collection must be initialized (message [ref:init]) and enabled (message
    [ref:enable]) in order to be simulated and drawn.'
  name: load
  type: message
- desc: 'Post this message to a collection-proxy-component to start background loading
    of the referenced collection.

    When the loading has completed, the message [ref:proxy_loaded] will be sent back
    to the script.


    A loaded collection must be initialized (message [ref:init]) and enabled (message
    [ref:enable]) in order to be simulated and drawn.'
  name: async_load
  type: message
- desc: 'This message is sent back to the script that initiated a collection proxy
    load when the referenced

    collection is loaded. See documentation for [ref:load] for examples how to use.'
  name: proxy_loaded
  type: message
- desc: 'Post this message to a collection-proxy-component to initialize the game
    objects and components in the referenced collection.

    Sending [ref:enable] to an uninitialized collection proxy automatically initializes
    it.

    The [ref:init] message simply provides a higher level of control.'
  name: init
  type: message
- desc: 'Post this message to a collection-proxy-component to enable the referenced
    collection, which in turn enables the contained game objects and components.

    If the referenced collection was not initialized prior to this call, it will automatically
    be initialized.'
  name: enable
  type: message
- desc: Post this message to a collection-proxy-component to disable the referenced
    collection, which in turn disables the contained game objects and components.
  name: disable
  type: message
- desc: Post this message to a collection-proxy-component to finalize the referenced
    collection, which in turn finalizes the contained game objects and components.
  name: final
  type: message
- desc: 'Post this message to a collection-proxy-component to start the unloading
    of the referenced collection.

    When the unloading has completed, the message [ref:proxy_unloaded] will be sent
    back to the script.'
  name: unload
  type: message
- desc: 'This message is sent back to the script that initiated an unload with a collection
    proxy when

    the referenced collection is unloaded. See documentation for [ref:unload] for
    examples how to use.'
  name: proxy_unloaded
  type: message
- desc: 'Messages for controlling and interacting with collection proxies

    which are used to dynamically load collections into the runtime.'
  members:
  - desc: 'return an indexed table of resources for a collection proxy. Each

      entry is a hexadecimal string that represents the data of the specific

      resource. This representation corresponds with the filename for each

      individual resource that is exported when you bundle an application with

      LiveUpdate functionality.'
    name: get_resources
    parameters:
    - desc: the collectionproxy to check for resources.
      name: collectionproxy
      type: url
    returns:
    - desc: the resources
      type: table
    type: function
  - desc: 'return an array of missing resources for a collection proxy. Each

      entry is a hexadecimal string that represents the data of the specific

      resource. This representation corresponds with the filename for each

      individual resource that is exported when you bundle an application with

      LiveUpdate functionality. It should be considered good practise to always

      check whether or not there are any missing resources in a collection proxy

      before attempting to load the collection proxy.'
    name: missing_resources
    parameters:
    - desc: 'the collectionproxy to check for missing

        resources.'
      name: collectionproxy
      type: url
    returns:
    - desc: the missing resources
      type: table
    type: function
  name: collectionproxy
  type: table
