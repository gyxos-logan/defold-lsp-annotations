- desc: Opaque pointer that holds info about a message type.
  name: Descriptor
  type: typedef
- desc: Store pointers as offset from base address. Needed when serializing entire
    messages (copy). Value (1 << 0)
  name: OPTION_OFFSET_POINTERS
  parameters: []
  type: function
- desc: Result enumeration.
  name: Result
  type: enum
- desc: Get Descriptor from hash name
  name: GetDescriptorFromHash
  parameters:
  - desc: hash of type name
    name: hash
    type: dmhash_t
  returns:
  - desc: 0 if not found
    type: dmDDF::Descriptor*
  type: function
- desc: Load/decode a DDF message from buffer
  name: LoadMessage
  parameters:
  - desc: Input buffer
    name: buffer
    type: const void*
  - desc: Input buffer size in bytes
    name: buffer_size
    type: uint32_t
  - desc: DDF descriptor
    name: desc
    type: dmDDF::Descriptor*
  - desc: (out) Destination pointer to message
    name: message
    type: void**
  returns:
  - desc: on success
    type: ''
  type: function
- desc: Load/decode a DDF message from buffer
  name: LoadMessage
  parameters:
  - desc: Input buffer
    name: buffer
    type: const void*
  - desc: Input buffer size in bytes
    name: buffer_size
    type: uint32_t
  - desc: DDF descriptor
    name: desc
    type: dmDDF::Descriptor*
  - desc: (out) Destination pointer to message
    name: message
    type: void**
  - desc: options, eg dmDDF::OPTION_OFFSET_POINTERS
    name: options
    type: uint32_t
  - desc: (out) loaded message size
    name: size
    type: uint32_t*
  returns:
  - desc: on success
    type: ''
  type: function
- desc: Save message to array
  name: SaveMessageToArray
  parameters:
  - desc: Message
    name: message
    type: const void*
  - desc: DDF descriptor
    name: desc
    type: dmDDF::Descriptor*
  - desc: Buffer to save to
    name: buffer
    type: dmArray<uint8_t>&
  returns:
  - desc: on success
    type: ''
  type: function
- desc: Load/decode a DDF message from buffer. Template variant
  name: LoadMessage<T>
  parameters:
  - desc: Input buffer
    name: buffer
    type: const void*
  - desc: Input buffer size in bytes
    name: buffer_size
    type: uint32_t
  - desc: (out) Destination pointer to message
    name: message
    type: T**
  returns:
  - desc: on success
    type: ''
  type: function
- desc: Load/decode a DDF message from file
  name: LoadMessageFromFile
  parameters:
  - desc: File name
    name: file_name
    type: const char*
  - desc: DDF descriptor
    name: desc
    type: dmDDF::Descriptor*
  - desc: (out) Destination pointer to message
    name: message
    type: void**
  returns:
  - desc: on success
    type: ''
  type: function
- desc: 'If the message was loaded with the flag dmDDF::OPTION_OFFSET_POINTERS, all
    pointers have their offset stored.

    This function resolves those offsets into actual pointers'
  name: ResolvePointers
  parameters:
  - desc: DDF descriptor
    name: desc
    type: dmDDF::Descriptor*
  - desc: (int/out) The message to patch pointers in
    name: message
    type: void*
  returns:
  - desc: on success
    type: ''
  type: function
- desc: Free message
  name: FreeMessage
  parameters:
  - desc: The message
    name: message
    type: void*
  type: function
- desc: '[file:<dmsdk/ddf/ddf.h>]'
  members: []
  name: dmDDF
  type: table
