- desc: Functions for passing messages and constructing URL objects.
  members:
  - desc: 'This is equivalent to `msg.url(nil)` or `msg.url("#")`, which creates an
      url to the current

      script component.'
    name: url
    parameters: []
    returns:
    - desc: a new URL
      type: url
    type: function
  - desc: 'The format of the string must be `[socket:][path][#fragment]`, which is
      similar to a HTTP URL.

      When addressing instances:


      - `socket` is the name of a valid world (a collection)

      - `path` is the id of the instance, which can either be relative the instance
      of the calling script or global

      - `fragment` would be the id of the desired component


      In addition, the following shorthands are available:


      - `"."` the current game object

      - `"#"` the current component'
    name: url
    parameters:
    - desc: string to create the url from
      name: urlstring
      type: string
    returns:
    - desc: a new URL
      type: url
    type: function
  - desc: creates a new URL from separate arguments
    name: url
    parameters:
    - desc: socket of the URL
      name: socket
      optional: true
      type:
      - string
      - hash
    - desc: path of the URL
      name: path
      optional: true
      type:
      - string
      - hash
    - desc: fragment of the URL
      name: fragment
      optional: true
      type:
      - string
      - hash
    returns:
    - desc: a new URL
      type: url
    type: function
  - desc: 'Post a message to a receiving URL. The most common case is to send messages

      to a component. If the component part of the receiver is omitted, the message

      is broadcast to all components in the game object.


      The following receiver shorthands are available:


      - `"."` the current game object

      - `"#"` the current component


      [icon:attention] There is a 2 kilobyte limit to the message parameter table
      size.'
    name: post
    parameters:
    - desc: The receiver must be a string in URL-format, a URL object or a hashed
        string.
      name: receiver
      type:
      - string
      - url
      - hash
    - desc: The id must be a string or a hashed string.
      name: message_id
      type:
      - string
      - hash
    - desc: a lua table with message parameters to send.
      name: message
      optional: true
      type:
      - table
      - nil
    type: function
  name: msg
  type: table
