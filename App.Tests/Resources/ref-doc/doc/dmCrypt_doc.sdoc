elements {
  type: ENUM
  name: "Algorithm"
  brief: "encryption algorithm enumeration"
  description: "encryption algorithm enumeration"
  members {
    name: "dmCrypt::ALGORITHM_XTEA"
    doc: ""
    type: ""
  }
}
elements {
  type: ENUM
  name: "Result"
  brief: "result enumeration"
  description: "result enumeration"
  members {
    name: "dmCrypt::RESULT_OK"
    doc: "= 0"
    type: ""
  }
  members {
    name: "dmCrypt::RESULT_ERROR"
    doc: "= 1"
    type: ""
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::HashSha1"
  brief: "Hash buffer using SHA1"
  description: "Hash buffer using SHA1"
  parameters {
    name: "buf"
    doc: "The source data to hash"
    types: "const uint8_t*"
  }
  parameters {
    name: "buflen"
    doc: "The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "digest"
    doc: "The destination buffer (20 bytes)"
    types: "uint8_t*"
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::HashSha256"
  brief: "Hash buffer using SHA256"
  description: "Hash buffer using SHA256"
  parameters {
    name: "buf"
    doc: "The source data to hash"
    types: "const uint8_t*"
  }
  parameters {
    name: "buflen"
    doc: "key The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "digest"
    doc: "The destination buffer (32 bytes)"
    types: "uint8_t*"
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::HashSha512"
  brief: "Hash buffer using SHA512"
  description: "Hash buffer using SHA512"
  parameters {
    name: "buf"
    doc: "The source data to hash"
    types: "const uint8_t*"
  }
  parameters {
    name: "buflen"
    doc: "key The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "digest"
    doc: "The destination buffer (64 bytes)"
    types: "uint8_t*"
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::HashMd5"
  brief: "Hash buffer using MD5"
  description: "Hash buffer using MD5"
  parameters {
    name: "buf"
    doc: "The source data to hash"
    types: "const uint8_t*"
  }
  parameters {
    name: "buflen"
    doc: "key The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "digest"
    doc: "The destination buffer (16 bytes)"
    types: "const uint8_t*"
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::Base64Encode"
  brief: "Base64 encode a buffer"
  description: "Base64 encode a buffer"
  returnvalues {
    name: "success"
    doc: "true if the encoding went ok"
    types: "bool"
  }
  parameters {
    name: "src"
    doc: "The source data to encode"
    types: "const uint8_t*"
  }
  parameters {
    name: "src_len"
    doc: "key The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "dst"
    doc: "The destination buffer"
    types: "uint8_t*"
  }
  parameters {
    name: "dst_len[in,out]"
    doc: "In: The length of the destination in bytes. Out: The length of the encoded string."
    types: "uint32_t*"
  }
}
elements {
  type: FUNCTION
  name: "dmCrypt::Base64Decode"
  brief: "Base64 decode a buffer"
  description: "Base64 decode a buffer"
  returnvalues {
    name: "success"
    doc: "true if the decoding went ok"
    types: "bool"
  }
  parameters {
    name: "src"
    doc: "The source data to encode"
    types: "const uint8_t*"
  }
  parameters {
    name: "src_len"
    doc: "key The length of source data in bytes"
    types: "uint32_t"
  }
  parameters {
    name: "dst"
    doc: "The destination buffer"
    types: "uint8_t*"
  }
  parameters {
    name: "dst_len[in,out]"
    doc: "In: The length of the destination in bytes. Out: The length of the decoded string."
    types: "uint32_t*"
  }
}
info {
  namespace: "dmCrypt"
  name: "Crypt"
  brief: "SDK Crypt API documentation"
  description: "<span class=\"file\"><dmsdk/dlib/crypt.h></span>\nVarious hash and encode/decode functions."
  path: ""
  file: ""
}
