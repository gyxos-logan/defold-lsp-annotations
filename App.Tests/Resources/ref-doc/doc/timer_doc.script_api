- desc: 'Timers allow you to set a delay and a callback to be called when the timer
    completes.


    The timers created with this API are updated with the collection timer where they

    are created. If you pause or speed up the collection (using `set_time_step`) it
    will

    also affect the new timer.'
  members:
  - desc: 'Adds a timer and returns a unique handle


      You may create more timers from inside a timer callback.


      Using a delay of 0 will result in a timer that triggers at the next frame just
      before

      script update functions.


      If you want a timer that triggers on each frame, set delay to 0.0f and repeat
      to true.


      Timers created within a script will automatically die when the script is deleted.'
    name: delay
    parameters:
    - desc: time interval in seconds
      name: delay
      type: number
    - desc: true = repeat timer until cancel, false = one-shot timer
      name: repeat
      type: boolean
    - desc: 'timer callback function


        `self`

        : [type:object] The current object


        `handle`

        : [type:number] The handle of the timer


        `time_elapsed`

        : [type:number] The elapsed time - on first trigger it is time since timer.delay
        call, otherwise time since last trigger'
      name: callback
      type: function(self, handle, time_elapsed)
    returns:
    - desc: handle identifier for the create timer, returns timer.INVALID_TIMER_HANDLE
        if the timer can not be created
      type: ''
    type: function
  - desc: 'You may cancel a timer from inside a timer callback.

      Cancelling a timer that is already executed or cancelled is safe.'
    name: cancel
    parameters:
    - desc: the timer handle returned by timer.delay()
      name: handle
      type: hash
    returns:
    - desc: if the timer was active, false if the timer is already cancelled / complete
      type: boolean
    type: function
  - desc: Manual triggering a callback for a timer.
    name: trigger
    parameters:
    - desc: the timer handle returned by timer.delay()
      name: handle
      type: hash
    returns:
    - desc: if the timer was active, false if the timer is already cancelled / complete
      type: boolean
    type: function
  - desc: Indicates an invalid timer handle
    name: INVALID_TIMER_HANDLE
    type: number
  name: timer
  type: table
