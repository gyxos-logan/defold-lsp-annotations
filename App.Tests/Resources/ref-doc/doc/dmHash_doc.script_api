- desc: '```cpp

    typedef uint64_t dmhash_t

    ```'
  name: dmhash_t
  type: typedef
- desc: Hash state used for 32-bit incremental hashing
  name: HashState32
  type: struct
- desc: Hash state used for 64-bit incremental hashing
  name: HashState64
  type: struct
- desc: Hash functions.
  members:
  - desc: Calculate 32-bit hash value from buffer
    name: uffer32
    parameters:
    - desc: Buffer
      name: buffer
      type: const void*
    - desc: Length of buffer
      name: buffer_len
      type: uint32_t
    returns:
    - desc: hash value
      type: uint32_t
    type: function
  - desc: calculate 64-bit hash value from buffer
    name: uffer64
    parameters:
    - desc: Buffer
      name: buffer
      type: const void*
    - desc: Length of buffer
      name: buffer_len
      type: uint32_t
    returns:
    - desc: hash value
      type: uint64_t
    type: function
  - desc: Calculate 32-bit hash value from string
    name: tring32
    parameters:
    - desc: Null terminated string
      name: string
      type: const char*
    returns:
    - desc: hash value
      type: uint32_t
    type: function
  - desc: calculate 64-bit hash value from string
    name: tring64
    parameters:
    - desc: Null terminated string
      name: string
      type: const char*
    returns:
    - desc: hash value
      type: uint64_t
    type: function
  - desc: 'Returns the original string used to produce a hash.

      Always returns a null terminated string. Returns "<unknown>" if the original
      string wasn''t found.'
    name: everseSafe64
    parameters:
    - desc: hash value
      name: hash
      type: uint64_t
    returns:
    - desc: char*] Original string value or "<unknown>" if it wasn't found.
      type: ''
    type: function
  - desc: 'Reverse hash lookup. Maps hash to original data. It is guaranteed that
      the returned

      buffer is null-terminated. If the buffer contains a valid c-string

      it can safely be used in printf and friends.'
    name: everseSafe64
    parameters:
    - desc: hash to lookup
      name: hash
      type: uint64_t
    - desc: original data length. Optional argument and NULL-pointer is accepted.
      name: length
      type: uint32_t*
    returns:
    - desc: char*] pointer to buffer. 0 if no reverse exists or if reverse lookup
        is disabled
      type: ''
    type: function
  - desc: 'Returns the original string used to produce a hash.

      Always returns a null terminated string. Returns "<unknown>" if the original
      string wasn''t found.'
    name: everseSafe32
    parameters:
    - desc: hash value
      name: hash
      type: uint32_t
    returns:
    - desc: char*] Original string value or "<unknown>" if it wasn't found.
      type: ''
    type: function
  - desc: 'Reverse hash lookup. Maps hash to original data. It is guaranteed that
      the returned

      buffer is null-terminated. If the buffer contains a valid c-string

      it can safely be used in printf and friends.'
    name: everseSafe32
    parameters:
    - desc: hash to lookup
      name: hash
      type: uint32_t
    - desc: original data length. Optional argument and NULL-pointer is accepted.
      name: length
      type: uint32_t*
    returns:
    - desc: char*] pointer to buffer. 0 if no reverse exists or if reverse lookup
        is disabled
      type: ''
    type: function
  - desc: Initialize hash-state for 32-bit incremental hashing
    name: nit32
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState32*
    - desc: true to enable reverse hashing of buffers up to ::DMHASH_MAX_REVERSE_LENGTH
      name: reverse_hash
      type: bool
    type: function
  - desc: Clone 32-bit incremental hash state
    name: lone32
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState32*
    - desc: Source hash state
      name: source_hash_state
      type: HashState32*
    - desc: true to enable reverse hashing of buffers up to ::DMHASH_MAX_REVERSE_LENGTH.
        Ignored if source state reverse hashing is disabled.
      name: reverse_hash
      type: bool
    type: function
  - desc: Incremental hashing
    name: pdateBuffer32
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState32*
    - desc: Buffer
      name: buffer
      type: const void*
    - desc: Length of buffer
      name: buffer_len
      type: uint32_t
    type: function
  - desc: Finalize incremental hashing and release associated resources
    name: inal32
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState32*
    returns:
    - desc: the hash value
      type: uint32_t
    type: function
  - desc: 'Release incremental hashing resources

      Used to release assocciated resources for intermediate incremental hash states.'
    name: elease32
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState32*
    type: function
  - desc: Initialize hash-state for 64-bit incremental hashing
    name: nit64
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState64*
    - desc: true to enable reverse hashing of buffers up to ::DMHASH_MAX_REVERSE_LENGTH
      name: reverse_hash
      type: ''
    type: function
  - desc: Clone 64-bit incremental hash state
    name: lone64
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState64*
    - desc: Source hash state
      name: source_hash_state
      type: HashState64*
    - desc: 'true [type: bool] to enable reverse hashing of buffers up to ::DMHASH_MAX_REVERSE_LENGTH.
        Ignored if source state reverse hashing is disabled.'
      name: reverse_hash
      type: ''
    type: function
  - desc: Incremental hashing
    name: pdateBuffer64
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState64*
    - desc: Buffer
      name: buffer
      type: const void*
    - desc: Length of buffer
      name: buffer_len
      type: uint32_t
    type: function
  - desc: Finalize incremental hashing and release associated resources
    name: inal64
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState64*
    returns:
    - desc: The hash value
      type: uint64_t
    type: function
  - desc: 'Release incremental hashing resources

      Used to release assocciated resources for intermediate incremental hash states.'
    name: elease64
    parameters:
    - desc: Hash state
      name: hash_state
      type: HashState64*
    type: function
  name: dmHash
  type: table
