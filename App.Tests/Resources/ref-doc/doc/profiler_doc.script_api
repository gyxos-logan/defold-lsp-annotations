- desc: 'Functions for getting profiling data in runtime.

    More detailed [profiling](https://www.defold.com/manuals/profiling/) and [debugging](http://www.defold.com/manuals/debugging/)
    information available in the manuals.'
  members:
  - desc: 'Get the amount of memory used (resident/working set) by the application
      in bytes, as reported by the OS.


      [icon:attention] This function is not available on [icon:html5] HTML5.


      The values are gathered from internal OS functions which correspond to the following;


      OS                                | Value

      ----------------------------------|------------------

      [icon:ios] iOS<br/>[icon:macos] MacOS<br/>[icon:android]<br/>Androd<br/>[icon:linux]
      Linux | [Resident memory](https://en.wikipedia.org/wiki/Resident_set_size)

      [icon:windows] Windows            | [Working set](https://en.wikipedia.org/wiki/Working_set)

      [icon:html5] HTML5                | [icon:attention] Not available'
    name: get_memory_usage
    parameters: []
    returns:
    - desc: used by the application
      type: number
    type: function
  - desc: 'Get the percent of CPU usage by the application, as reported by the OS.


      [icon:attention] This function is not available on [icon:html5] HTML5.


      For some platforms ([icon:android] Android, [icon:linux] Linux and [icon:windows]
      Windows), this information is only available

      by default in the debug version of the engine. It can be enabled in release
      version as well

      by checking `track_cpu` under `profiler` in the `game.project` file.

      (This means that the engine will sample the CPU usage in intervalls during execution
      even in release mode.)'
    name: get_cpu_usage
    parameters: []
    returns:
    - desc: of CPU used by the application
      type: number
    type: function
  - desc: 'Creates and shows or hides and destroys the on-sceen profiler ui


      The profiler is a real-time tool that shows the numbers of milliseconds spent

      in each scope per frame as well as counters. The profiler is very useful for

      tracking down performance and resource problems.'
    name: enable_ui
    parameters:
    - desc: true to enable, false to disable
      name: enabled
      type: boolean
    type: function
  - desc: Set the on-screen profile mode - run, pause, record or show peak frame
    name: set_ui_mode
    parameters:
    - desc: 'the mode to set the ui profiler in


        - `profiler.MODE_RUN` This is default mode that continously shows the last
        frame

        - `profiler.MODE_PAUSE` Pauses on the currently displayed frame

        - `profiler.MODE_SHOW_PEAK_FRAME` Pauses on the currently displayed frame
        but shows a new frame if that frame is slower

        - `profiler.MODE_RECORD` Records all incoming frames to the recording buffer


        To stop recording, switch to a different mode such as `MODE_PAUSE` or `MODE_RUN`.

        You can also use the `view_recorded_frame` function to display a recorded
        frame. Doing so stops the recording as well.


        Every time you switch to recording mode the recording buffer is cleared.

        The recording buffer is also cleared when setting the `MODE_SHOW_PEAK_FRAME`
        mode.'
      name: mode
      type: constant
    type: function
  - desc: Set the on-screen profile view mode - minimized or expanded
    name: set_ui_view_mode
    parameters:
    - desc: 'the view mode to set the ui profiler in


        - `profiler.VIEW_MODE_FULL` The default mode which displays all the ui profiler
        details

        - `profiler.VIEW_MODE_MINIMIZED` Minimized mode which only shows the top header
        (fps counters and ui profiler mode)'
      name: mode
      type: constant
    type: function
  - desc: 'Shows or hides the time the engine waits for vsync in the on-screen profiler


      Each frame the engine waits for vsync and depending on your vsync settings and
      how much time

      your game logic takes this time can dwarf the time in the game logic making
      it hard to

      see details in the on-screen profiler graph and lists.


      Also, by hiding this the FPS times in the header show the time spent each time
      excuding the

      time spent waiting for vsync. This shows you how long time your game is spending
      actively

      working each frame.


      This setting also effects the display of recorded frames but does not affect
      the actual

      recorded frames so it is possible to toggle this on and off when viewing recorded
      frames.


      By default the vsync wait times is displayed in the profiler.'
    name: set_ui_vsync_wait_visible
    parameters:
    - desc: true to include it in the display, false to hide it.
      name: visible
      type: boolean
    type: function
  - desc: Get the number of recorded frames in the on-screen profiler ui recording
      buffer
    name: recorded_frame_count
    parameters: []
    returns:
    - desc: the number of recorded frames, zero if on-screen profiler is disabled
      type: number
    type: function
  - desc: 'Pauses and displays a frame from the recording buffer in the on-screen
      profiler ui


      The frame to show can either be an absolute frame or a relative frame to the
      current frame.'
    name: view_recorded_frame
    parameters:
    - desc: 'a table where you specify one of the following parameters:


        - `distance` The offset from the currently displayed frame (this is truncated
        between zero and the number of recorded frames)

        - `frame` The frame index in the recording buffer (1 is first recorded frame)'
      name: frame_index
      type: table
    type: function
  - desc: Send a text to the profiler
    name: log_text
    parameters:
    - desc: the string to send to the profiler
      name: text
      type: string
    type: function
  - desc: Starts a profile scope.
    name: scope_begin
    parameters:
    - desc: The name of the scope
      name: name
      type: string
    type: function
  - desc: End the current profile scope.
    name: scope_end
    parameters: []
    type: function
  - desc: continously show latest frame
    name: MODE_RUN
    type: number
  - desc: pause on current frame
    name: MODE_PAUSE
    type: number
  - desc: pause at peak frame
    name: MODE_SHOW_PEAK_FRAME
    type: number
  - desc: start recording
    name: MODE_RECORD
    type: number
  - desc: show full profiler ui
    name: VIEW_MODE_FULL
    type: number
  - desc: show mimimal profiler ui
    name: VIEW_MODE_MINIMIZED
    type: number
  name: profiler
  type: table
