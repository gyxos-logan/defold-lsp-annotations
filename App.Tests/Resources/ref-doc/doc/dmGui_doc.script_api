- desc: A handle to a gui scene
  name: HScene
  parameters: []
  type: function
- desc: A handle to a gui node
  name: HNode
  parameters: []
  type: function
- desc: Invalid node handle
  name: INVALID_HANDLE
  parameters: []
  type: function
- desc: ''
  name: Playback
  parameters: []
  type: function
- desc: ''
  name: AdjustReference
  parameters: []
  type: function
- desc: This enum denotes what kind of texture type the m_Texture pointer is referencing.
  name: NodeTextureType
  parameters: []
  type: function
- desc: ''
  name: Result
  parameters: []
  type: function
- desc: ''
  name: Result
  parameters: []
  type: function
- desc: ''
  name: NewNode
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the position
    name: position
    type: dmVMath::Point3
  - desc: the size
    name: size
    type: dmVMath::Vector3
  - desc: the node type
    name: node_type
    type: dmGui::NodeType
  - desc: If node_type == dmGui::NODE_TYPE_CUSTOM, then this is used to create a custom
      node data for the registered custom type
    name: custom_type
    type: uint32_t
  returns:
  - desc: the created node
    type: dmGui::HNode
  type: function
- desc: Defer delete a node
  name: DeleteNode
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the node to delete
    name: node
    type: dmGui::HNode
  type: function
- desc: Set the id of a node.
  name: SetNodeId
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  - desc: the id
    name: id
    type: dmhash_t
  type: function
- desc: Get the id of a node.
  name: GetNodeId
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  returns:
  - desc: the id of the node
    type: dmhash_t
  type: function
- desc: Set the parent of a gui node
  name: SetNodeParent
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  - desc: the new parent. May be null
    name: parent
    type: dmGui::HNode
  - desc: true to keep the world position
    name: keep_scene_transform
    type: bool
  returns:
  - desc: dmGui::RESULT_OK is successful
    type: dmGui::Result
  type: function
- desc: Get the parent of a gui node
  name: GetNodeParent
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  returns:
  - desc: the parent, or INVALID_HANDLE is unsuccessful
    type: dmGui::HNode
  type: function
- desc: Get first child node
  name: GetFirstChildNode
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: Gets the first child node. If 0, gets the first top level node.
    name: node
    type: dmGui::HNode
  returns:
  - desc: The first child node
    type: dmGui::HNode
  type: function
- desc: Get next sibling
  name: GetNextNode
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the current sibling
    name: node
    type: dmGui::HNode
  returns:
  - desc: the next sibling, or INVALID_HANDLE if no more siblings
    type: dmGui::HNode
  type: function
- desc: Query if the node is a bone
  name: GetNodeIsBone
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  returns:
  - desc: true if the node is a bone
    type: bool
  type: function
- desc: Set the bone state of the node
  name: SetNodeIsBone
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: dmGui::HNode
  - desc: true if the node is ot be used as a bone
    name: is_bone
    type: bool
  type: function
- desc: ''
  name: Property
  parameters: []
  type: function
- desc: Get property value
  name: GetNodeProperty
  parameters:
  - desc: 'type: dmGui::HScene] scene'
    name: scene
    type: ''
  - desc: 'type: dmGui::HNode] node'
    name: node
    type: ''
  - desc: property enum
    name: property
    type: dmGui::Property
  returns:
  - desc: ''
    type: dmVMath::Vector4
  type: function
- desc: Set property value
  name: SetNodeProperty
  parameters:
  - desc: 'type: dmGui::HScene] scene'
    name: scene
    type: ''
  - desc: 'type: dmGui::HNode] node'
    name: node
    type: ''
  - desc: property enum
    name: property
    type: dmGui::Property
  - desc: ''
    name: value
    type: dmVMath::Vector4
  type: function
- desc: ''
  name: AdjustMode
  parameters: []
  type: function
- desc: Set adjust mode
  name: SetNodeAdjustMode
  parameters:
  - desc: 'type: dmGui::HScene] scene'
    name: scene
    type: ''
  - desc: 'type: dmGui::HNode] node'
    name: node
    type: ''
  - desc: the adjust mode
    name: adjust_mode
    type: AdjustMode
  type: function
- desc: get node custom type
  name: GetNodeCustomData
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  returns:
  - desc: the custom type. Or 0 if it is no custom type
    type: uint32_t
  type: function
- desc: get node custom data
  name: GetNodeCustomData
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  returns:
  - desc: the custom data created per node by the gui node type extension
    type: void*
  type: function
- desc: get node texture
  name: GetNodeTextureId
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  returns:
  - desc: the currently assigned texture
    type: dmhash_t
  type: function
- desc: set node texture
  name: SetNodeTexture
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  - desc: the texture id
    name: texture_id
    type: dmhash_t
  type: function
- desc: set node texture
  name: SetNodeTexture
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  - desc: the type of texture
    name: type
    type: NodeTextureType
  - desc: A pointer to a e.g. dmGameSystem::TextureSetResource*
    name: texture
    type: void*
  type: function
- desc: Gets a resource by its resource alias.
  name: GetResource
  parameters:
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the resource alias
    name: resource_id
    type: dmhash_t
  - desc: 'the hash of the suffix: hash(".spinescenec")'
    name: suffix_with_dot
    type: dmhash_t
  returns:
  - desc: the resource if successful
    type: void*
  type: function
- desc: Pushes a dmGui::HNode to the stack
  name: LuaPushNode
  parameters:
  - desc: the Lua scene
    name: L
    type: lua_State*
  - desc: the gui scene
    name: scene
    type: dmGui::HScene
  - desc: the gui node
    name: node
    type: HNode
  type: function
- desc: ''
  members: []
  name: dmGui
  type: table
